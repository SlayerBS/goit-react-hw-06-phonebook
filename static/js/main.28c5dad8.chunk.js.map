{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","redux/contacts/actions.js","redux/contacts/reducer.js","redux/store.js","components/ContactList/ContactList.js","components/ContactList/ContactList.container.js","components/Container/Container.js","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/Section/Section.js","App.js","index.js"],"names":["module","exports","addContact","createAction","data","payload","id","uuidv4","name","number","deleteContact","changeFilter","items","createReducer","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","ContactList","onDelete","map","contact","className","styles","item","onClick","btn","getVisibleContacts","allContacts","normalizedFilter","toLowerCase","includes","connect","dispatch","Container","children","value","onChange","evt","target","type","title","required","input","ContactForm","handleChange","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","reset","alert","this","pattern","Component","Section","container","App","ReactDOM","render","StrictMode","losding","document","getElementById"],"mappings":"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","file":"static/js/main.28c5dad8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__1EYI_\",\"btn\":\"ContactForm_btn__35GBU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__2YPip\",\"btn\":\"ContactList_btn__1O3vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3k3fx\",\"container\":\"Section_container__3QYys\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__mFh84\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3jiw9\"};","import { createAction } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nexport const addContact = createAction(\"add\", (data) => ({\r\n  payload: {\r\n    id: uuidv4(),\r\n    name: data.name,\r\n    number: data.number,\r\n  },\r\n}));\r\n\r\nexport const deleteContact = createAction(\"delete\");\r\n\r\nexport const changeFilter = createAction(\"changeFilter\");\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addContact, deleteContact, changeFilter } from \"./actions\";\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: (state, { payload }) => [...state, payload],\r\n  [deleteContact]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport logger from \"redux-logger\";\r\nimport contactsReducer from \"./contacts/reducer\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst contactsPersistConfig = {\r\n  key: \"contacts\",\r\n  storage,\r\n  blacklist: [\"filter\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: persistReducer(contactsPersistConfig, contactsReducer),\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => (\r\n  <ul>\r\n    {contacts.map((contact) => (\r\n      <li key={contact.id} className={styles.item}>\r\n        <span>\r\n          {contact.name}:{contact.number}\r\n        </span>\r\n        <button onClick={() => onDelete(contact.id)} className={styles.btn}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/actions\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(({ name }) =>\r\n    name.toLowerCase().includes(normalizedFilter)\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  contacts: getVisibleContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(deleteContact(id)),\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Container.module.css\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.Container}>{children} </div>\r\n);\r\n\r\nexport default Container;\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeFilter } from \"../../redux/contacts/actions\";\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <>\r\n      <h3>Find contacts by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n        name=\"filter\"\r\n        title=\"\"\r\n        required\r\n        className={styles.input}\r\n      />\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  value: state.contacts.filter,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (evt) => dispatch(changeFilter(evt.target.value)),\r\n});\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/actions\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    if (this.state.name && this.state.number !== \"\") {\r\n      const { name, number } = this.state;\r\n      this.props.onSubmit({ id: uuidv4(), name, number });\r\n      this.reset();\r\n      return;\r\n    }\r\n    alert(\"Please, input name and number\");\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            className={styles.input}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={styles.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (data) => dispatch(addContact(data)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport styles from \"./Section.module.css\";\r\n\r\nconst Section = ({ title, children }) => (\r\n  <>\r\n    <h2 className={styles.title}> {title}</h2>\r\n    <div className={styles.container}>{children} </div>\r\n  </>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\nimport ContactList from \"./components/ContactList\";\nimport Container from \"./components/Container\";\nimport Filter from \"./components/Filter\";\nimport ContactForm from \"./components/ContactForm\";\nimport Section from \"./components/Section\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter />\n          <ContactList />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport store from \"./redux/store\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate losding={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}